{"version":3,"sources":["components/header/Counter.jsx","components/header/Header.jsx","components/card/Card.jsx","components/card/GameOver.jsx","CardGame.js","Home.js","components/drag/Dustbin.jsx","components/drag/Box.jsx","components/drag/ItemTypes.js","components/drag/DnD.jsx","App.js","serviceWorker.js","index.js","assets/slider.png","assets/logo.png","assets/coin.png"],"names":["Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","styles","fontSize","fontWeight","state","score","react_default","a","createElement","className","tags","length","map","tag","key","Component","Header","_ref","restartGame","header_Counter","onClick","Card","id","isFlipped","handleClick","cardNumber","react_card_flip_default","flipSpeedBackToFront","flipSpeedFrontToBack","concat","GameOver","CardGame","Array","fill","shuffledCard","duplicateCard","sort","Math","random","clickCount","prevSelectedCard","prevCardId","event","preventDefault","cardId","target","newFlipps","slice","setState","newCard","previousCard","isCardMatch","card1","card2","card1Id","card2Id","hideCard","setTimeout","console","log","flipBack","isGameOver","every","element","_this2","header_Header","card_GameOver","index","card_Card","PureComponent","reduce","preValue","current","array","Home","src","slider","alt","class","style","height","width","marginRight","marginBottom","color","padding","textAlign","lineHeight","float","Dustbin","accept","lastDroppedItem","onDrop","_useDrop","useDrop","drop","collect","monitor","isOver","canDrop","_useDrop2","slicedToArray","_useDrop2$","isActive","backgroundColor","ref","objectSpread","join","JSON","stringify","border","cursor","Box","name","type","isDropped","_useDrag","useDrag","item","opacity","isDragging","_useDrag2","drag","ItemTypes","DnD","_useState","useState","accepts","_useState2","dustbins","setDustbins","_useState3","boxes","_useState5","_useState6","droppedBoxNames","setDroppedBoxNames","handleDrop","useCallback","update","$push","defineProperty","$set","overflow","clear","drag_Dustbin","_ref2","boxName","drag_Box","indexOf","Video","lib","playsInline","Drag","dist_esm","backend","HTML5Backend","drag_DnD","App","react_router_dom","to","logo","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4b5bbc08.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nclass Counter extends Component {\n    \n    constructor(props){\n      super(props)\n      this.state={\n        score: props.score\n      }\n    }\n  styles = {\n    fontSize: 50,\n    fontWeight: \"bold\"\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"row score\">\n          <label>Score:&nbsp;</label>{this.props.score}\n        </div>\n      </div>\n    );\n  }\n \n  renderTags() {\n    if (this.state.tags.length === 0) {\n      return <p>There are no tags</p>;\n    }\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Counter;","import React from 'react';\nimport Counter from './Counter';\nconst Header = ({ restartGame,score }) => (\n  <div className=\"grid-header-container\">\n    <div className=\"justify-left timer\">\n      <label>Time left: </label>\n    </div>\n    <div className=\"justify-center game-status-text\">\n    <label><Counter score={score}/></label>\n    </div>\n    <div className=\"justify-end\">\n      <button onClick={restartGame} className=\"restart-button\">Restart Game</button>\n    </div>\n  </div>\n);\n\nexport default Header;","import React from 'react';\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Card = ({ id, isFlipped, handleClick, cardNumber }) => (\n  <ReactCardFlip isFlipped={isFlipped} flipSpeedBackToFront={1} flipSpeedFrontToBack={1} >\n    <button id={id} className={`card card-front ${cardNumber !== -1 ? \"\" : \"hide-card\"}`} onClick={handleClick} key=\"front\">\n    </button>\n\n    <button id={id} className={`card card-back ${cardNumber !== -1 ? \"\" : \"hide-card\"}`} onClick={handleClick} key=\"back\">\n      { cardNumber }\n    </button>\n  </ReactCardFlip>\n);\n\nexport default Card;","import React from 'react';\n\nconst GameOver = ({ restartGame }) => (\n  <div className=\"justify-center\">\n    <h1>Game Over!</h1>\n    <button className=\"restart-button\" onClick={restartGame}>Restart Game</button>\n  </div>\n);\n\nexport default GameOver;","import React, { PureComponent } from 'react';\nimport Header from './components/header/Header';\nimport Card from './components/card/Card';\nimport GameOver from './components/card/GameOver';\n\nimport './styles/main.css';\n\nclass CardGame extends PureComponent {\n\n  state = { \n    isFlipped: Array(16).fill(false),\n    shuffledCard: CardGame.duplicateCard().sort(() => Math.random() - 0.5),\n    clickCount: 1,\n    prevSelectedCard: -1,\n    prevCardId: -1,\n    score: 0 \n  };\n\n  static duplicateCard = () => {\n    return [0,1,2,3,4,5,6,7].reduce((preValue, current, index, array) => {\n      return preValue.concat([current, current])\n    },[]);\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    const cardId = event.target.id;\n    const newFlipps = this.state.isFlipped.slice();\n    this.setState({\n        prevSelectedCard: this.state.shuffledCard[cardId],\n        prevCardId: cardId\n    });\n\n    if (newFlipps[cardId] === false) {\n      newFlipps[cardId] = !newFlipps[cardId];\n      this.setState({ \n        isFlipped: newFlipps,\n        clickCount: this.state.clickCount + 1\n      });\n\n      if (this.state.clickCount === 2) {\n        this.setState({ clickCount: 1 });\n        const prevCardId = this.state.prevCardId;\n        const newCard = this.state.shuffledCard[cardId];\n        const previousCard = this.state.prevSelectedCard;\n\n        this.isCardMatch(previousCard, newCard, prevCardId, cardId);\n      }\n    }\n  };\n\n  isCardMatch = (card1, card2, card1Id, card2Id) => {\n    if (card1 === card2) {\n      const hideCard = this.state.shuffledCard.slice();\n      hideCard[card1Id] = -1;\n      hideCard[card2Id] = -1;\n      setTimeout(() => {\n        this.setState({\n          shuffledCard: hideCard,\n          // add score\n          score: this.state.score+=1\n        })\n      }, 1000);\n      // increase score\n      console.log(this.state.score)\n        \n    } else {\n      const flipBack = this.state.isFlipped.slice();\n      flipBack[card1Id] = false;\n      flipBack[card2Id] = false;\n      setTimeout(() => {\n        this.setState( { isFlipped: flipBack });\n      }, 1000);\n    }\n  };\n\n  restartGame = () => {\n    this.setState({\n      isFlipped: Array(16).fill(false),\n      shuffledCard: CardGame.duplicateCard().sort(() => Math.random() - 0.5),\n      clickCount: 1,\n      prevSelectedCard: -1,\n      prevCardId: -1\n    });\n  };\n\n  isGameOver = () => {\n    return this.state.isFlipped.every((element) => element !== false);\n  };\n\n  render() {\n    return (\n     <div>\n       <Header restartGame={this.restartGame} score={this.state.score}/>\n       { this.isGameOver() ? <GameOver restartGame={this.restartGame} /> :\n       <div className=\"grid-container\">\n          {\n            this.state.shuffledCard.map((cardNumber, index) => \n              <div className=\"single_card\">\n              <Card\n                key={index} \n                id={index} \n                cardNumber={cardNumber} \n                isFlipped={this.state.isFlipped[index]} \n                handleClick={this.handleClick}  \n              />\n              </div>\n            )\n          }\n        </div>\n       }\n     </div>\n    );\n  }\n}\n\nexport default CardGame;","import React, { PureComponent } from \"react\";\nimport slider from \"./assets/slider.png\";\nimport \"./styles/main.css\";\nimport chau from \"./assets/coin.png\";\n\nimport \"./styles/main.css\";\n\nclass Home extends PureComponent {\n  render() {\n    return (\n      <header className=\"masthead\">\n        <div className=\"container h-100\">\n          <img src={slider} alt={\"slider\"} className=\"slider\"/>\n        </div>\n        <div>\n          <p class=\"text-center header_about_us\">About us</p>\n          <div className=\"hr_button_wrapper\">\n            <button className=\"hr_button\" />\n          </div>\n          <p class=\"text-center slogan\">\n            Our world is a beautiful place and it has sustained everything\n            living on it for millions of years. Although our presence has done\n            much damage to it, we still have a chance to change it.\n          </p>\n          {/* <div className=\"about_us_container\">\n            <table className=\"about_us_table\">\n              <tr>\n                \\\\\\\n                <td>\n                  <img className=\"avatar_about_us\" src={chau} alt={\"chau\"} />\n                </td>\n                <td>\n                  <img className=\"avatar_about_us\" src={chau} alt={\"chau\"} />\n                </td>\n                <td>\n                  <img className=\"avatar_about_us\" src={chau} alt={\"chau\"} />\n                </td>\n                <td>\n                  <img className=\"avatar_about_us\" src={chau} alt={\"chau\"} />\n                </td>\n                <td>\n                  <img className=\"avatar_about_us\" src={chau} alt={\"chau\"} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p className=\"about_us_name\">Quynh Chau</p>\n                </td>\n                <td>\n                  <p className=\"about_us_name\">Quynh Chau</p>\n                </td>\n                <td>\n                  <p className=\"about_us_name\">Quynh Chau</p>\n                </td>\n                <td>\n                  <p className=\"about_us_name\">Quynh Chau</p>\n                </td>\n                <td>\n                  <p className=\"about_us_name\">Quynh Chau</p>\n                </td>\n              </tr>\n            </table>\n          </div> */}\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport { useDrop } from 'react-dnd'\nconst style = {\n  height: '12rem',\n  width: '12rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  color: 'white',\n  padding: '1rem',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  float: 'left',\n}\nconst Dustbin = ({ accept, lastDroppedItem, onDrop }) => {\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept,\n    drop: onDrop,\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  })\n  const isActive = isOver && canDrop\n  let backgroundColor = '#222'\n  if (isActive) {\n    backgroundColor = 'darkgreen'\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki'\n  }\n  return (\n    <div ref={drop} style={{ ...style, backgroundColor }}>\n      {isActive\n        ? 'Release to drop'\n        : `This dustbin accepts: ${accept.join(', ')}`}\n\n      {lastDroppedItem && (\n        <p>Last dropped: {JSON.stringify(lastDroppedItem)}</p>\n      )}\n    </div>\n  )\n}\nexport default Dustbin;\n","import React from 'react'\nimport { useDrag } from 'react-dnd'\nconst style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  float: 'left',\n}\nconst Box = ({ name, type, isDropped }) => {\n  const [{ opacity }, drag] = useDrag({\n    item: { name, type },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  })\n  return (\n    <div ref={drag} style={{ ...style, opacity }}>\n      {isDropped ? <s>{name}</s> : name}\n    </div>\n  )\n}\nexport default Box\n","export default {\n  COMPOSTABLE: 'compostable',\n  NONCOMPOSTABLE: 'not compostable',\n}\n","import React, { useState, useCallback } from \"react\";\nimport { NativeTypes } from \"react-dnd-html5-backend\";\nimport Dustbin from \"./Dustbin\";\nimport Box from \"./Box\";\nimport ItemTypes from \"./ItemTypes\";\nimport update from \"immutability-helper\";\nconst DnD = () => {\n  const [dustbins, setDustbins] = useState([\n    { accepts: [ItemTypes.COMPOSTABLE], lastDroppedItem: null },\n    { accepts: [ItemTypes.NONCOMPOSTABLE], lastDroppedItem: null }\n  ]);\n  const [boxes] = useState([\n    { name: \"Bottle\", type: ItemTypes.NONCOMPOSTABLE },\n    { name: \"Banana\", type: ItemTypes.COMPOSTABLE },\n    { name: \"Magazine\", type: ItemTypes.NONCOMPOSTABLE }\n  ]);\n  const [droppedBoxNames, setDroppedBoxNames] = useState([]);\n  function isDropped(boxName) {\n    return droppedBoxNames.indexOf(boxName) > -1;\n  }\n  const handleDrop = useCallback(\n    (index, item) => {\n      const { name } = item;\n      setDroppedBoxNames(\n        update(droppedBoxNames, name ? { $push: [name] } : { $push: [] })\n      );\n      setDustbins(\n        update(dustbins, {\n          [index]: {\n            lastDroppedItem: {\n              $set: item\n            }\n          }\n        })\n      );\n    },\n    [droppedBoxNames, dustbins]\n  );\n  return (\n    <div>\n      <div style={{ overflow: \"hidden\", clear: \"both\" }}>\n        {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n          <Dustbin\n            accept={accepts}\n            lastDroppedItem={lastDroppedItem}\n            onDrop={item => handleDrop(index, item)}\n            key={index}\n          />\n        ))}\n      </div>\n\n      <div style={{ overflow: \"hidden\", clear: \"both\" }}>\n        {boxes.map(({ name, type }, index) => (\n          <Box\n            name={name}\n            type={type}\n            isDropped={isDropped(name)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default DnD;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CardGame from \"./CardGame\";\nimport Home from \"./Home\";\nimport DnD from \"./components/drag/DnD\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport logo from \"./assets/logo.png\";\n\nimport { Player } from \"video-react\";\nimport \"../node_modules/video-react/dist/video-react.css\"; // import css\n\nfunction Video() {\n  return (\n    <Player\n      playsInline\n      src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n    />\n  );\n}\n\nfunction Drag() {\n  return (\n    <div>\n      <DndProvider backend={HTML5Backend}>\n        <DnD />\n      </DndProvider>\n    </div>\n  );\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand-lg indigo\">\n            <Link to=\"./\">\n              <img className=\"logo\" src={logo} alt={\"logo\"} />\n            </Link>\n\n            <div\n              className=\"collapse navbar-collapse navbar-right\"\n              id=\"navbarText\"\n            >\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"./reuse\">\n                    Reuse\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"./reduce\">\n                    Reduce\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"./recycle\">\n                    Recycle\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/reduce/\" component={CardGame} />\n          <Route path=\"/recyle/\" component={Drag} />\n          <Route path=\"/reuse/\" component={Video} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/slider.4a1f8e4b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.21a09852.png\";","module.exports = __webpack_public_path__ + \"static/media/coin.a2ef5859.png\";"],"sourceRoot":""}